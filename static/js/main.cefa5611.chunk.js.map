{"version":3,"sources":["utils/api.js","images/search.svg","Component/Search.js","images/droplet-fill.svg","webpack:///./src/images/droplet-fill.svg?be44","images/thermometer-half.svg","Component/Panel.js","Component/ForecastPanel.js","images/weather.jpg","App.js","reportWebVitals.js","index.js"],"names":["woeidGet","city","a","fetch","then","res","json","response","console","log","weatherGet","id","SearchBar","styled","div","SearchInput","input","SearchButton","button","SearchIcon","img","Search","setWoeid","setWeatherData","setWeatherPanel","setCity","setIsSearching","useState","setInput","getCityId","inputCity","data","length","woeid","getWeatherInfo","searchHandler","cityInfo","consolidated_weather","title","onChange","e","inputHandler","target","value","placeholder","onClick","src","searchIcon","_path","Fillup","keyframes","PanelContainer","BasicField","City","ContentField","TextField","Date","Temp","RWDTemp","WeatherState","WeatherIcon","IconContainer","Img","Item","ChartField","TemperatureContainer","TemperatureChart","HumidityChart","SVG","svg","props","humidity","SVGRect","MaxRect","rect","maxTemp","MinRect","minTemp","Title","SmallIcon","Panel","weatherPanel","abbr","weather_state_abbr","max_temp","toFixed","min_temp","currentTemp","the_temp","dateStr","applicable_date","replaceAll","weather_state_name","alt","viewBox","className","x","y","width","fill","fontSize","fontWeight","style","marginTop","Thermometer","r","cx","cy","Drop","todayHTML","_excluded","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDropletFill","_ref","svgRef","titleId","xmlns","height","ref","fillRule","d","ForwardRef","DropIcon","Container","Field","InfoField","ImageContainer","Humidity","ForecastPanel","item","slice","ForecastContainer","PageContainer","weatherImage","AppContainer","SubTitle","p","Mask","CenterLoading","ReactLoading","ErrorMsg","App","weatherData","isSearching","type","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cefa5611.chunk.js","sourcesContent":["const locationApi = \"https://www.metaweather.com/api/location/search/?query=\";\n\nconst weatherApi = \"https://www.metaweather.com/api/location/\";\n\nconst woeidGet = async (city) => {\n  const response = await fetch(`${locationApi}` + city).then((res) => {\n    // console.log(res.json());\n    return res.json();\n  });\n  console.log(response);\n  return response;\n};\n\nconst weatherGet = async (id) => {\n  const response = await fetch(`${weatherApi}` + id).then((res) => {\n    return res.json();\n  });\n  console.log(response);\n  return response;\n};\n\nexport { woeidGet, weatherGet };\n","export default __webpack_public_path__ + \"static/media/search.b1f781b9.svg\";","import { useState } from \"react\";\nimport { woeidGet, weatherGet } from \"../utils/api\";\nimport styled from \"styled-components\";\nimport searchIcon from \"../images/search.svg\";\n\nconst SearchBar = styled.div`\n  width: 100%;\n  display: flex;\n  margin: 20px 0;\n`;\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: 5px;\n  padding-left: 10px;\n  background: rgba(227, 227, 227, 0.6);\n  border: none;\n  border-radius: 4px;\n  margin-right: 10px;\n  height: 40px;\n  &:focus {\n    outline: none;\n  }\n`;\nconst SearchButton = styled.button`\n  width: 40px;\n  height: 40px;\n  background-color: #e3e3e3;\n  border: none;\n  border-radius: 4px;\n  transition: 0.3s;\n  cursor: pointer;\n  &:hover {\n    background-color: #f3f3f3;\n    transform: translateY(-2px);\n  }\n`;\nconst SearchIcon = styled.img`\n  width: 20px;\n  height: 20px;\n`;\nexport default function Search({\n  setWoeid,\n  setWeatherData,\n  setWeatherPanel,\n  setCity,\n  setIsSearching,\n}) {\n  const [input, setInput] = useState();\n\n  async function getCityId(inputCity) {\n    const data = await woeidGet(inputCity);\n    if (data.length === 0) {\n      setWoeid(0);\n      setWeatherData([]);\n      setWeatherPanel([]);\n      return;\n    } else {\n      setWoeid(data[0].woeid);\n      return data;\n    }\n  }\n  async function getWeatherInfo(id) {\n    const data = await weatherGet(id);\n    return data;\n  }\n\n  const inputHandler = (e) => {\n    setInput(e);\n  };\n\n  const searchHandler = async () => {\n    setIsSearching(true);\n\n    const cityInfo = await getCityId(input);\n\n    if (cityInfo) {\n      const data = await getWeatherInfo(cityInfo[0].woeid);\n      setWeatherData(data);\n      setWeatherPanel(data.consolidated_weather[0]);\n      setCity(data.title);\n    }\n\n    setIsSearching(false);\n  };\n\n  return (\n    <SearchBar>\n      <SearchInput\n        onChange={(e) => {\n          inputHandler(e.target.value);\n        }}\n        placeholder=\"Enter City\"\n      />\n      <SearchButton\n        onClick={() => {\n          searchHandler();\n        }}\n      >\n        <SearchIcon src={searchIcon} />\n      </SearchButton>\n    </SearchBar>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/droplet-fill.b192ea97.svg\";","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDropletFill(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"white\",\n    className: \"bi bi-droplet-fill\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M8 16a6 6 0 0 0 6-6c0-1.655-1.122-2.904-2.432-4.362C10.254 4.176 8.75 2.503 8 0c0 0-6 5.686-6 10a6 6 0 0 0 6 6zM6.646 4.646c-.376.377-1.272 1.489-2.093 3.13l.894.448c.78-1.559 1.616-2.58 1.907-2.87l-.708-.708z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropletFill);\nexport default __webpack_public_path__ + \"static/media/droplet-fill.b192ea97.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/thermometer-half.636afbc7.svg\";","import styled from \"styled-components\";\nimport { keyframes } from \"styled-components\";\nimport Drop from \"../images/droplet-fill.svg\";\nimport Thermometer from \"../images/thermometer-half.svg\";\n\nconst Fillup = keyframes`\n0%{\n    stroke-dasharray:  0 100;\n\n}\n100%{\n    stroke-dasharray:  humidity 100;\n}\n  `;\n\nconst PanelContainer = styled.div`\n  background: rgba(227, 227, 227, 0.3);\n  display: flex;\n  border-radius: 8px;\n  padding: 30px;\n  height: 300px;\n`;\nconst BasicField = styled.div`\n  width: 50%;\n  text-align: left;\n`;\n\nconst City = styled.div`\n  font-size: 48px;\n  font-weight: 700;\n  color: white;\n  margin-bottom: 5px;\n  @media (max-width: 500px) {\n    font-size: 32px;\n  }\n`;\n\nconst ContentField = styled.div`\n  display: flex;\n  padding: 20px;\n  align-items: center;\n  width: 80%;\n  margin: 0 auto;\n  @media (max-width: 767px) {\n    width: 90%;\n    padding: 20px 0px;\n    /* flex-direction: column-reverse; */\n  }\n`;\nconst TextField = styled.div``;\nconst Date = styled.div`\n  font-size: 24px;\n  font-weight: 300;\n  color: white;\n  @media (max-width: 500px) {\n    font-size: 20px;\n  }\n`;\nconst Temp = styled.div`\n  width: 120px;\n  text-align: center;\n  font-size: 48px;\n  font-weight: 700;\n  color: white;\n  @media (max-width: 767px) {\n    width: 80px;\n    font-size: 32px;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst RWDTemp = styled.div`\n  display: none;\n  @media (max-width: 500px) {\n    display: block;\n    font-size: 32px;\n    font-weight: 700;\n    margin-bottom: 5px;\n  }\n`;\nconst WeatherState = styled.div`\n  font-size: 24px;\n  font-weight: 300;\n  color: white;\n  @media (max-width: 500px) {\n    font-size: 20px;\n  }\n`;\nconst WeatherIcon = styled.div``;\nconst IconContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  margin-right: 20px;\n  @media (max-width: 650px) {\n    width: 80px;\n  }\n`;\nconst Img = styled.img`\n  width: 100%;\n`;\nconst Item = styled.div`\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst ChartField = styled.div`\n  width: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\nconst TemperatureContainer = styled.div`\n  padding-bottom: 70px;\n  @media (max-width: 650px) {\n    padding-bottom: 0px;\n  }\n`;\nconst TemperatureChart = styled.div`\n  position: relative;\n  width: 150px;\n  height: 150px;\n  @media (max-width: 650px) {\n    top: -60px;\n  }\n`;\nconst HumidityChart = styled.div``;\n\nconst SVG = styled.svg`\n  width: 120px;\n  height: 120px;\n  transform: rotate(-90deg);\n  border-radius: 50%;\n\n  circle.circle1 {\n    fill: rgba(227, 227, 227, 0.2);\n    stroke: #6495ed;\n    stroke-width: 32;\n\n    /*\n   * 第一個數字：虛線長度；\n   * 第二個數字：虛線彼此間的間距\n   */\n    /* stroke-dasharray: 71 100; */\n    stroke-dasharray: ${(props) => `${props.humidity} 100`};\n    animation: ${Fillup} 2s linear 1;\n  }\n  @media (max-width: 650px) {\n    width: 80px;\n    height: 80px;\n  }\n`;\n\nconst SVGRect = styled.svg`\n  position: relative;\n  border-bottom: 1px solid #000;\n  @media (max-width: 650px) {\n    top: -0px;\n  }\n`;\n\nconst MaxRect = styled.rect`\n  height: ${(props) => `${props.maxTemp * 2}px`};\n  fill: lightsalmon;\n`;\nconst MinRect = styled.rect`\n  height: ${(props) => `${props.minTemp * 2}px`};\n  fill: #80c7ff;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 15px;\n  @media (max-width: 650px) {\n    margin-top: 5px;\n  }\n`;\nconst SmallIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  margin: 0 10px;\n  img {\n    width: 100%;\n  }\n  @media (max-width: 650px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport default function Panel({ weatherPanel, city, setIsSearching }) {\n  if (!city || !weatherPanel || weatherPanel.length === 0) {\n    return null;\n  }\n\n  const todayHTML = () => {\n    let abbr = weatherPanel.weather_state_abbr;\n    let maxTemp = weatherPanel.max_temp.toFixed(0);\n    let minTemp = weatherPanel.min_temp.toFixed(0);\n    let currentTemp = weatherPanel.the_temp.toFixed(0);\n    let humidity = weatherPanel.humidity;\n    const dateStr = weatherPanel.applicable_date.replaceAll(\"-\", \"/\");\n\n    return (\n      <PanelContainer>\n        <BasicField>\n          <City>{city}</City>\n          <RWDTemp>{currentTemp} °C</RWDTemp>\n          <Date>{dateStr}</Date>\n          <WeatherState>{weatherPanel.weather_state_name}</WeatherState>\n\n          <ContentField>\n            <WeatherIcon>\n              <IconContainer>\n                <Img\n                  src={`https://www.metaweather.com/static/img/weather/png/${abbr}.png`}\n                  alt=\"icon\"\n                />\n              </IconContainer>\n            </WeatherIcon>\n            <TextField>\n              <Temp>{currentTemp} °C</Temp>\n            </TextField>\n          </ContentField>\n        </BasicField>\n\n        <ChartField>\n          <TemperatureContainer>\n            <TemperatureChart>\n              <SVGRect viewBox=\"0 0 95 100\">\n                <MaxRect\n                  className=\"max\"\n                  x=\"25\"\n                  y={`${100 - maxTemp * 2}`}\n                  width=\"20\"\n                  maxTemp={maxTemp}\n                ></MaxRect>\n                <text\n                  className=\"value-label\"\n                  x=\"29\"\n                  y={111 - maxTemp * 2}\n                  fill=\"#fff\"\n                  fontSize=\"10\"\n                  fontWeight=\"bold\"\n                >\n                  {maxTemp}\n                </text>\n                <MinRect\n                  className=\"min\"\n                  x=\"45\"\n                  y={100 - minTemp * 2}\n                  width=\"20\"\n                  minTemp={minTemp}\n                ></MinRect>\n                <text\n                  className=\"value-label\"\n                  x=\"49\"\n                  y={111 - minTemp * 2}\n                  fill=\"#fff\"\n                  fontSize=\"10\"\n                  fontWeight=\"bold\"\n                >\n                  {minTemp}\n                </text>\n              </SVGRect>\n              <Title style={{ marginTop: \"7px\" }}>\n                <SmallIcon>\n                  <img src={Thermometer} alt=\"\" />\n                </SmallIcon>\n                <Item>\n                  {maxTemp} °C / {minTemp} °C\n                </Item>\n              </Title>\n            </TemperatureChart>\n          </TemperatureContainer>\n          <HumidityChart>\n            <SVG viewBox=\"0 0 32 32\" humidity={humidity}>\n              <circle className=\"circle1\" r=\"16\" cx=\"16\" cy=\"16\"></circle>\n            </SVG>\n            <Title>\n              <SmallIcon>\n                <img src={Drop} alt=\"\" />\n              </SmallIcon>\n              <Item>{humidity}%</Item>\n            </Title>\n          </HumidityChart>\n        </ChartField>\n      </PanelContainer>\n    );\n  };\n\n  return (\n    <>\n      <div>{todayHTML()}</div>\n    </>\n  );\n}\n","import styled from \"styled-components\";\nimport { ReactComponent as Drop } from \"../images/droplet-fill.svg\";\n\nconst DropIcon = styled(Drop)``;\n\nconst Container = styled.div`\n  width: 150px;\n  height: 150px;\n  margin-top: 20px;\n\n  background: rgba(227, 227, 227, 0.3);\n  border-radius: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  transition: 0.2s;\n  color: white;\n\n  @media (max-width: 1200px) {\n    width: 100%;\n    height: 70px;\n    margin-top: 10px;\n    padding: 10px 30px;\n  }\n  &:hover {\n    background-color: rgba(227, 227, 227, 0.9);\n    transform: scale(1.03);\n    color: black;\n    ${DropIcon} {\n      fill: black;\n    }\n  }\n`;\n\nconst Field = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  @media (max-width: 1200px) {\n    justify-content: space-between;\n  }\n`;\nconst InfoField = styled.div`\n  text-align: left;\n  @media (max-width: 1200px) {\n    display: flex;\n    width: 50%;\n  }\n  @media (max-width: 500px) {\n    width: 70%;\n  }\n`;\nconst Date = styled.div`\n  font-size: 24px;\n  font-weight: lighter;\n  @media (max-width: 1200px) {\n  }\n`;\nconst Temp = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n  @media (max-width: 1200px) {\n    width: 50%;\n    margin: 0 auto;\n    text-align: center;\n  }\n`;\n\nconst ImageContainer = styled.div`\n  width: 50px;\n  height: 50px;\n  @media (max-width: 1200px) {\n    margin-right: 20px;\n  }\n`;\nconst Img = styled.img`\n  width: 100%;\n`;\n\nconst Humidity = styled.div`\n  display: none;\n  @media (max-width: 1200px) {\n    display: flex;\n    align-items: center;\n  }\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\nconst SmallIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  margin: 0 10px;\n  line-height: 24px;\n  img {\n    width: 100%;\n  }\n`;\nconst Item = styled.div`\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport default function ForecastPanel({ item, setWeatherPanel }) {\n  const abbr = item.weather_state_abbr;\n  const currentTemp = item.the_temp.toFixed(0);\n  const dateStr = item.applicable_date.replaceAll(\"-\", \"/\").slice(5, 10);\n  let humidity = item.humidity;\n\n  const clickHandler = () => {\n    setWeatherPanel(item);\n  };\n\n  return (\n    <Container\n      onClick={() => {\n        clickHandler();\n      }}\n    >\n      <Field>\n        <InfoField>\n          <Date>{dateStr}</Date>\n          <Temp>{currentTemp} °C</Temp>\n        </InfoField>\n        <Humidity>\n          <SmallIcon>\n            <DropIcon></DropIcon>\n          </SmallIcon>\n          <Item>Humidity：{humidity}%</Item>\n        </Humidity>\n        <ImageContainer>\n          <Img\n            src={`https://www.metaweather.com/static/img/weather/png/${abbr}.png`}\n            alt=\"icon\"\n          />\n        </ImageContainer>\n      </Field>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/weather.e5d08f7a.jpg\";","import \"./App.css\";\nimport \"./normalize.css\";\nimport styled from \"styled-components\";\n\nimport Search from \"./Component/Search\";\nimport { useState } from \"react\";\nimport Panel from \"./Component/Panel\";\nimport ForecastPanel from \"./Component/ForecastPanel\";\nimport weatherImage from \"./images/weather.jpg\";\nimport ReactLoading from \"react-loading\";\n\nconst ForecastContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media (max-width: 1200px) {\n    flex-direction: column;\n  }\n`;\n\nconst PageContainer = styled.div`\n  background: linear-gradient(rgba(0, 0, 0, 0.527), rgba(0, 0, 0, 0.5)),\n    url(${weatherImage});\n  background-size: cover;\n  background-position: 50% 50%;\n  padding: 50px 20px;\n  position: relative;\n  min-height: calc(100vh);\n  color: white;\n`;\n\nconst AppContainer = styled.div`\n  max-width: 1024px;\n  width: 90%;\n  margin: 0 auto;\n`;\n\nconst Title = styled.div`\n  font-size: 36px;\n  font-weight: bold;\n  color: white;\n  text-align: left;\n`;\n\nconst SubTitle = styled.p`\n  text-align: left;\n  color: white;\n  margin: 0;\n`;\nconst Mask = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  background-color: rgba(227, 227, 227, 0.5);\n  z-index: 3;\n`;\nconst CenterLoading = styled(ReactLoading)`\n  position: absolute;\n\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nconst ErrorMsg = styled.div`\n  text-align: left;\n`;\nfunction App() {\n  const [woeid, setWoeid] = useState();\n  const [weatherData, setWeatherData] = useState([]);\n  const [weatherPanel, setWeatherPanel] = useState([]);\n  const [city, setCity] = useState(\"\");\n  const [isSearching, setIsSearching] = useState(false);\n\n  console.log(weatherData);\n  console.log(weatherPanel);\n\n  if (!weatherData) {\n    return \"isLoading\";\n  }\n  console.log(isSearching);\n\n  return (\n    <div className=\"App\">\n      {isSearching ? (\n        <Mask>\n          <CenterLoading type={\"spin\"} />\n        </Mask>\n      ) : (\n        \"\"\n      )}\n      <PageContainer>\n        <AppContainer>\n          <Title>Weather Forecaster</Title>\n          <SubTitle> Get the weather forecast for city worldwide.</SubTitle>\n          <Search\n            setWoeid={setWoeid}\n            setWeatherData={setWeatherData}\n            setWeatherPanel={setWeatherPanel}\n            setCity={setCity}\n            setIsSearching={setIsSearching}\n          />\n          {woeid === 0 ? (\n            <ErrorMsg>\n              <h1>Oops, city not found</h1>\n              <h3>\n                please make sure the city spelling is correct and try again.\n              </h3>\n            </ErrorMsg>\n          ) : (\n            <Panel\n              setIsSearching={setIsSearching}\n              weatherData={weatherData.consolidated_weather}\n              weatherPanel={weatherPanel}\n              city={city}\n            />\n          )}\n\n          <ForecastContainer>\n            {weatherData.length !== 0 &&\n              weatherData.consolidated_weather.map((item, index) => {\n                return (\n                  <ForecastPanel\n                    item={item}\n                    index={index}\n                    setWeatherPanel={setWeatherPanel}\n                  />\n                );\n              })}\n          </ForecastContainer>\n        </AppContainer>\n      </PageContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}